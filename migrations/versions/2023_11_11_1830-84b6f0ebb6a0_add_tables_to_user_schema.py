"""Add tables to user schema

Revision ID: 84b6f0ebb6a0
Revises: 4f3e07e5a31a
Create Date: 2023-11-11 18:30:44.029098

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '84b6f0ebb6a0'
down_revision: Union[str, None] = '4f3e07e5a31a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('payment_method',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.String(length=100), nullable=False),
    sa.Column('method_type', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='user'
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='user'
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('mail', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('id_role', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_role'], ['user.role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mail'),
    schema='user'
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=True),
    sa.Column('message', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_user'], ['user.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='user'
    )
    op.create_table('user_activity_log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('datetime', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_user'], ['user.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='user'
    )
    op.create_table('user_payment',
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('id_payment_method', sa.Integer(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_payment_method'], ['user.payment_method.id'], ),
    sa.ForeignKeyConstraint(['id_user'], ['user.user.id'], ),
    sa.PrimaryKeyConstraint('id_user', 'id_payment_method'),
    schema='user'
    )
    op.drop_table('event_location', schema='event')
    op.drop_table('country', schema='event')
    op.drop_table('city', schema='event')
    op.drop_constraint('FK__log__user_mail__4589517F', 'log', schema='kpi', type_='foreignkey')
    op.alter_column('log', 'user_mail',
               existing_type=sa.VARCHAR(length=255, collation='Modern_Spanish_CI_AS'),
               type_=sa.String(length=100),
               existing_nullable=True,
               schema='kpi')
    op.create_foreign_key(None, 'log', 'user', ['user_mail'], ['mail'], source_schema='kpi', referent_schema='user')
    op.drop_column('event', 'sdes', schema='event')
    op.drop_column('event', 'date', schema='event')
    op.add_column('event', sa.Column('description', sa.String(length=100), nullable=False), schema='event')
    op.add_column('event', sa.Column('status', sa.String(length=50), nullable=True), schema='event')
    op.add_column('event', sa.Column('id_user', sa.Integer(), nullable=True), schema='event')
    op.add_column('event', sa.Column('created_at', sa.DateTime(), nullable=True), schema='event')
    op.add_column('event', sa.Column('updated_at', sa.DateTime(), nullable=True), schema='event')
    op.create_foreign_key(None, 'event', 'user', ['id_user'], ['id'], source_schema='event', referent_schema='user')
    op.drop_table('subscriptionEvent', schema='event')
    op.drop_table('user', schema='auth')
    op.drop_table('role', schema='auth')
    op.alter_column('log', 'user_mail',
               existing_type=sa.VARCHAR(length=255, collation='Modern_Spanish_CI_AS'),
               type_=sa.String(length=100),
               existing_nullable=True,
               schema='kpi')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'log', schema='kpi', type_='foreignkey')
    op.create_foreign_key('FK__log__user_mail__4589517F', 'log', 'user', ['user_mail'], ['mail'], source_schema='kpi', referent_schema='auth')
    op.alter_column('log', 'user_mail',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255, collation='Modern_Spanish_CI_AS'),
               existing_nullable=True,
               schema='kpi')
    op.add_column('event', sa.Column('date', sa.DATE(), autoincrement=False, nullable=True), schema='event')
    op.add_column('event', sa.Column('sdes', sa.VARCHAR(length=255, collation='Modern_Spanish_CI_AS'), autoincrement=False, nullable=True), schema='event')
    op.drop_constraint(None, 'event', schema='event', type_='foreignkey')
    op.drop_column('event', 'updated_at', schema='event')
    op.drop_column('event', 'created_at', schema='event')
    op.drop_column('event', 'id_user', schema='event')
    op.drop_column('event', 'status', schema='event')
    op.drop_column('event', 'description', schema='event')
    op.create_table('event_location',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('id_event', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('id_country', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('id_city', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_city'], ['event.city.id'], name='FK__event_loc__id_ci__3CF40B7E'),
    sa.ForeignKeyConstraint(['id_country'], ['event.country.id'], name='FK__event_loc__id_co__3DE82FB7'),
    sa.ForeignKeyConstraint(['id_event'], ['event.event.id'], name='FK__event_loc__id_ev__3EDC53F0'),
    sa.PrimaryKeyConstraint('id', name='PK__event_lo__3213E83F1E7FD96D'),
    schema='event'
    )
    op.create_table('city',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('sdes', sa.VARCHAR(length=255, collation='Modern_Spanish_CI_AS'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='PK__city__3213E83FD6496DA6'),
    schema='event'
    )
    op.create_table('subscriptionEvent',
    sa.Column('id_user', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id_event', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id_event'], ['event.event.id'], name='FK__subscript__id_ev__41B8C09B'),
    sa.ForeignKeyConstraint(['id_user'], ['auth.user.id'], name='FK__subscript__id_us__42ACE4D4'),
    sa.PrimaryKeyConstraint('id_user', 'id_event', name='PK__subscrip__3BC2A2119C4E78CA'),
    schema='event'
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255, collation='Modern_Spanish_CI_AS'), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=255, collation='Modern_Spanish_CI_AS'), autoincrement=False, nullable=False),
    sa.Column('mail', sa.VARCHAR(length=255, collation='Modern_Spanish_CI_AS'), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=128, collation='Modern_Spanish_CI_AS'), autoincrement=False, nullable=False),
    sa.Column('id_role', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_role'], ['auth.role.id'], name='FK__user__id_role__3A179ED3'),
    sa.PrimaryKeyConstraint('id', name='PK__user__3213E83F4FF63BE6'),
    schema='auth'
    )
    op.create_table('role',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('sdes', sa.VARCHAR(length=255, collation='Modern_Spanish_CI_AS'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='PK__role__3213E83F82A8C297'),
    schema='auth'
    )
    op.create_table('country',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('sdes', sa.VARCHAR(length=255, collation='Modern_Spanish_CI_AS'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='PK__country__3213E83FBE53F825'),
    schema='event'
    )
    op.drop_table('user_payment', schema='user')
    op.drop_table('user_activity_log', schema='user')
    op.drop_table('notification', schema='user')
    op.drop_table('user', schema='user')
    op.drop_table('role', schema='user')
    op.drop_table('payment_method', schema='user')
    # ### end Alembic commands ###
